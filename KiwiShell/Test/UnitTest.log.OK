Hello, world ===> Not interface
> echo "Hello" ===> {
	inputFileName          : nil
	outputFileName         : nil
	errorFileName          : nil
	enviromentVariableName : nil
	exitVariableName       : nil
	shellStatement         :  echo "Hello"
}
()> echo "Hello" ===> {
	inputFileName          : nil
	outputFileName         : nil
	errorFileName          : nil
	enviromentVariableName : nil
	exitVariableName       : nil
	shellStatement         :  echo "Hello"
}
(a)> echo "Hello" ===> {
	inputFileName          : a
	outputFileName         : nil
	errorFileName          : nil
	enviromentVariableName : nil
	exitVariableName       : nil
	shellStatement         :  echo "Hello"
}
(a b)> echo "Hello" ===> Not interface
(a, b)> echo "Hello" ===> {
	inputFileName          : a
	outputFileName         : b
	errorFileName          : nil
	enviromentVariableName : nil
	exitVariableName       : nil
	shellStatement         :  echo "Hello"
}
(a, b, c)> echo "Hello" ===> {
	inputFileName          : a
	outputFileName         : b
	errorFileName          : c
	enviromentVariableName : nil
	exitVariableName       : nil
	shellStatement         :  echo "Hello"
}
(a, b, c, d)> echo "Hello" ===> {
	inputFileName          : a
	outputFileName         : b
	errorFileName          : c
	enviromentVariableName : d
	exitVariableName       : nil
	shellStatement         :  echo "Hello"
}
(a, b, c, d, e)> echo "Hello" ===> Not interface
(a, b, c, d): > echo "Hello" ===> Not interface
(a, b, c, d): e > echo "Hello" ===> {
	inputFileName          : a
	outputFileName         : b
	errorFileName          : c
	enviromentVariableName : d
	exitVariableName       : e
	shellStatement         :  echo "Hello"
}
/* Source script 0 */
/* Translated script 0 */
/* Source script 1 */
let a = 1.0;
> echo "Hello, world !!\n"
console.log(a)
/* Translated script 1 */
let a = 1.0;
 echo "Hello, world !!\n"
console.log(a)
Summary: OK
